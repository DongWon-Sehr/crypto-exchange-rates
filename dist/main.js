(()=>{"use strict";var e,r={};e=r,Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{constructor(e="binance"){if(this.cryptoRates={},this.usdRates={date:"",usd:{}},this.sources={binance:{url:"https://api.binance.com/api/v3/ticker/price"},coinpaprika:{url:"https://api.coinpaprika.com/v1/tickers"}},!this._isSupportSource(e))throw new Error("Invalid source. Please provide a valid source.");this.source=e,this._fetchCryptos(),this._fetchUSD()}_fetchCryptos(){fetch(this.sources[this.source].url).then((e=>{if(!e.ok)throw new Error("Network response was not ok while fetching crypto rates");return e.json()})).then((e=>{if("binance"===this.source)this.cryptoRates=this._convertBinanceResponse(e);else{if("coinpaprika"!==this.source)throw new Error("Invalid source. Please provide a valid source.");this.cryptoRates=this._convertCoinpaprikaResponse(e)}})).catch((e=>{throw new Error("Error fetching crypto rates:"+e)}))}_convertBinanceResponse(e){return e.reduce(((e,r)=>(e[r.symbol]={USD:parseFloat(r.price)},e)),{})}_convertCoinpaprikaResponse(e){return e.reduce(((e,r)=>(e[r.symbol]={USD:r.quotes.USD.price},e)),{})}testFetchCryptos(){this._fetchCryptos()}testFetchUSD(){this._fetchUSD()}setSource(e){if(!this._isSupportSource(e))throw new Error("Invalid source. Please provide a valid source.");this.source=e,this._fetchCryptos()}_isSupportSource(e){return Object.keys(this.sources).map((e=>e.toLowerCase())).includes(e.toLowerCase())}_fetchUSD(){fetch("https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies/usd.json").then((e=>{if(!e.ok)throw new Error("Network response was not ok while fetching USD rates");return e.json()})).then((e=>{this.usdRates=e})).catch((e=>{throw new Error("Error fetching USD rates:"+e)}))}},module.exports=r})();